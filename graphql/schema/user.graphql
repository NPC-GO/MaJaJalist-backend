type User{
    id:ID!
    email:Email!
    nickName:String!
    avatar:String!
    userLevel:Level!
    special:Boolean!
    todos:[Todo!]
    emailVerified:Boolean!
    userConfig:[Config!]
}
input CreateUserInput{
    email:String!
    id:String!
    nickName:String!
    password:String!
}
extend type MyQuery{
    MyUserData:User!
    MyUserConfig:[Config!]
}
extend type MyMutation {
    CreateUser(input:CreateUserInput):User!
    CheckIDAvailability(id:ID!):Boolean!

}
enum Level{
    Admin
    User
    Restricted
}
scalar Email